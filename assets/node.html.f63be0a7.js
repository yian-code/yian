import{_ as c,r as o,o as i,c as l,a as n,b as a,d as s,e as p}from"./app.63d6be65.js";const u={},r=n("h2",{id:"\u7B80\u4ECB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u4ECB","aria-hidden":"true"},"#"),s(" \u7B80\u4ECB")],-1),k={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"Node.js\u7B80\u4ECB",-1),v=n("blockquote",null,[n("p",null,"Node.js \u5C31\u662F\u8FD0\u884C\u5728\u670D\u52A1\u7AEF\u7684 JavaScript")],-1),m=n("blockquote",null,[n("p",null,"Node.js \u662F\u4E00\u4E2A\u57FA\u4E8E Chrome JavaScript \u8FD0\u884C\u65F6\u5EFA\u7ACB\u7684\u4E00\u4E2A\u5E73\u53F0")],-1),b=n("blockquote",null,[n("p",null,"Node.js \u662F\u4E00\u4E2A\u4E8B\u4EF6\u9A71\u52A8 I/O \u670D\u52A1\u7AEF JavaScript \u73AF\u5883,\u57FA\u4E8E Google \u7684 V8 \u5F15\u64CE,V8 \u5F15\u64CE\u6267\u884C Javascript \u7684\u901F\u5EA6\u975E\u5E38\u5FEB,\u6027\u80FD\u975E\u5E38\u597D")],-1),g={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},f=s("node.js\u5B98\u7F51"),h=s(" \u2003"),y={href:"http://nodejs.cn/",target:"_blank",rel:"noopener noreferrer"},x=s("node\u4E2D\u6587\u7F51"),w=s(" \u2003"),j={href:"https://www.runoob.com/nodejs/nodejs-tutorial.html",target:"_blank",rel:"noopener noreferrer"},q=s("\u83DC\u9E1F\u6559\u7A0Bnodejs"),_=p(`<h4 id="node\u4E0Ejs" tabindex="-1"><a class="header-anchor" href="#node\u4E0Ejs" aria-hidden="true">#</a> node\u4E0EJS</h4><ol><li>\u6CA1\u6709DOM\u548CBOM</li><li>\u652F\u6301\u6240\u6709ES\u8BED\u6CD5</li><li>\u5728node\u4E2D\u63D0\u4F9B\u4E00\u4E9B\u670D\u52A1\u5668\u7EA7\u522B\u7684\u64CD\u4F5CAPI <ul><li>\u6587\u4EF6\u8BFB\u5199</li><li>\u7F51\u7EDC\u670D\u52A1\u6784\u5EFA</li><li>\u7F51\u7EDC\u901A\u4FE1</li><li>http\u670D\u52A1\u5668</li></ul></li></ol><h2 id="\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B" aria-hidden="true">#</a> \u8FDB\u7A0B\u4E0E\u7EBF\u7A0B</h2><h4 id="\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B" aria-hidden="true">#</a> \u8FDB\u7A0B</h4><p>\u8FDB\u7A0B\u5C31\u662F\u6B63\u5728\u8FD0\u884C\u7684\u7A0B\u5E8F,\u5B83\u4F1A\u5360\u7528\u5BF9\u5E94\u7684\u5185\u5B58\u533A\u57DF,\u7531CPU\u8FDB\u884C\u6267\u884C\u4E0E\u8BA1\u7B97,\u8FDB\u7A0B\u662F\u64CD\u4F5C\u7CFB\u7EDF<strong>\u5206\u914D\u8D44\u6E90</strong>\u7684\u5355\u4F4D</p><ul><li>\u72EC\u7ACB\u6027</li></ul><blockquote><p>\u8FDB\u7A0B\u662F\u7CFB\u7EDF\u4E2D\u72EC\u7ACB\u5B58\u5728\u7684\u5B9E\u4F53,\u5B83\u53EF\u4EE5\u62E5\u6709\u81EA\u5DF1\u72EC\u7ACB\u7684\u8D44\u6E90,\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u62E5\u6709\u81EA\u5DF1\u79C1\u6709\u7684\u5730\u5740\u7A7A\u95F4,\u5728\u6CA1\u6709\u7ECF\u8FC7\u8FDB\u7A0B\u672C\u8EAB\u5141\u8BB8\u7684\u60C5\u51B5\u4E0B,\u4E00\u4E2A\u7528\u6237\u8FDB\u7A0B\u4E0D\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\u5176\u4ED6\u8FDB\u7A0B\u7684\u5730\u5740\u7A7A\u95F4</p></blockquote><ul><li>\u52A8\u6001\u6027</li></ul><blockquote><p>\u8FDB\u7A0B\u4E0E\u7A0B\u5E8F\u7684\u533A\u522B\u5728\u4E8E,\u7A0B\u5E8F\u53EA\u662F\u4E00\u4E2A\u9759\u6001\u7684\u6307\u4EE4\u96C6\u5408,\u800C\u8FDB\u7A0B\u662F\u4E00\u4E2A\u6B63\u5728\u7CFB\u7EDF\u4E2D\u6D3B\u52A8\u7684\u6307\u4EE4\u96C6\u5408,\u7A0B\u5E8F\u52A0\u5165\u4E86\u65F6\u95F4\u7684\u6982\u5FF5\u4EE5\u540E,\u79F0\u4E3A\u8FDB\u7A0B,\u5177\u6709\u81EA\u5DF1\u7684\u751F\u547D\u5468\u671F\u548C\u5404\u79CD\u4E0D\u540C\u7684\u72B6\u6001,\u8FD9\u4E9B\u6982\u5FF5\u90FD\u662F\u7A0B\u5E8F\u6240\u4E0D\u5177\u5907\u7684.</p></blockquote><ul><li>\u5E76\u53D1\u6027</li></ul><blockquote><p>\u591A\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5728\u5355\u4E2A\u5904\u7406\u5668CPU\u4E0A\u5E76\u53D1\u6267\u884C,\u591A\u4E2A\u8FDB\u7A0B\u4E4B\u95F4\u4E0D\u4F1A\u4E92\u76F8\u5F71\u54CD.</p></blockquote><h4 id="\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B" aria-hidden="true">#</a> \u7EBF\u7A0B</h4><p>\u7EBF\u7A0B\u662F\u64CD\u4F5C\u7CFB\u7EDFOS\u80FD\u591F\u8FDB\u884C<strong>\u8FD0\u7B97\u8C03\u5EA6</strong>\u7684\u6700\u5C0F\u5355\u4F4D,\u5B83\u88AB\u5305\u542B\u5728\u8FDB\u7A0B\u4E4B\u4E2D,\u662F\u8FDB\u7A0B\u4E2D\u7684\u5B9E\u9645\u8FD0\u4F5C\u5355\u4F4D,\u7EBF\u7A0B\u7684\u672C\u8D28\u5C31\u662F<strong>\u51FD\u6570\u6267\u884C</strong>.</p><ul><li>\u4E00\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5F00\u542F\u591A\u4E2A\u7EBF\u7A0B,\u5176\u4E2D\u6709\u4E00\u4E2A\u4E3B\u7EBF\u7A0B\u6765\u8C03\u7528\u672C\u8FDB\u7A0B\u4E2D\u7684\u5176\u4ED6\u7EBF\u7A0B.</li><li>\u8FDB\u7A0B\u7684\u5207\u6362\uFF0C\u5207\u6362\u7684\u662F\u4E0D\u540C\u8FDB\u7A0B\u7684\u4E3B\u7EBF\u7A0B</li><li>\u591A\u7EBF\u7A0B\u53EF\u4EE5\u8BA9\u540C\u4E00\u4E2A\u8FDB\u7A0B\u540C\u65F6\u5E76\u53D1\u5904\u7406\u591A\u4E2A\u4EFB\u52A1\uFF0C\u76F8\u5F53\u4E8E\u6269\u5C55\u4E86\u8FDB\u7A0B\u7684\u529F\u80FD,\u4E86\u89E3<strong>\u9AD8\u5E76\u53D1</strong>\u95EE\u9898.</li></ul><div class="custom-container tip"><p class="custom-container-title">\u7EBF\u7A0B\u7684\u72B6\u6001: \u5C31\u7EEA\u3001\u6267\u884C\u3001\u963B\u585E,\u6216\u8005\u5206\u4E3A\u521B\u5EFA\u3001\u5C31\u7EEA\u3001\u6267\u884C\u3001\u963B\u585E\u3001\u7EC8\u6B62(\u6B7B\u4EA1)</p></div><h2 id="cmd\u57FA\u672C\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#cmd\u57FA\u672C\u547D\u4EE4" aria-hidden="true">#</a> cmd\u57FA\u672C\u547D\u4EE4</h2><ul><li><code>\u78C1\u76D8\u540D:</code> \u2003\u76F4\u63A5\u8FDB\u5165\u8BE5\u78C1\u76D8</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u8FDB\u5165D\u76D8</span>
D:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>cls</code> \u2003\u6E05\u5C4F</li><li><code>dir</code> \u2003\u76F8\u5F53\u4E8ELinux\u7684<code>ls</code></li><li><code>node xx.js</code> \u2003\u4F7F\u7528node\u8FD0\u884Cjs\u6587\u4EF6</li><li><code>cd cd ..</code> \u2003\u4E0ELinux\u4E00\u6837</li><li><code>md rd</code> \u2003\u521B\u5EFA\u5220\u9664\u76EE\u5F55,\u76F8\u5F53\u4E8ELinux\u7684<code>mkdir rm</code></li><li><code>ipconfig</code> \u2003\u76F8\u5F53\u4E8E<code>ifconfig</code></li><li><code>node</code> \u2003\u8FDB\u5165node\u73AF\u5883</li></ul><h2 id="\u6A21\u5757\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u7CFB\u7EDF" aria-hidden="true">#</a> \u6A21\u5757\u7CFB\u7EDF</h2><ul><li>Node.js\u9075\u5FAACommonJS\u6A21\u5757\u5316\u89C4\u8303</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u52A0\u8F7D\u5185\u7F6E\u6A21\u5757\u65B9\u6CD5\uFF1A</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6CA1\u6709\u4EFB\u4F55\u524D\u7F00,\u5219\u8FD9\u4E2A\u8DEF\u5F84\u4F1A\u9ED8\u8BA4\u4ECEnpm\u5305\u7BA1\u7406\u5DE5\u5177\u4E0B\u7684node-modules\u6587\u4EF6\u5939\u4E2D\u67E5\u627E</span>

<span class="token comment">// \u52A0\u8F7D\u81EA\u5B9A\u4E49\u6A21\u5757\u65B9\u6CD5\uFF1A</span>
<span class="token keyword">const</span> custom <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./custom.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
<span class="token comment">// \u52A0\u8F7D\u7B2C\u4E09\u65B9\u9762\u6A21\u5757\uFF1A</span>
<span class="token keyword">const</span> moment <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;moment&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),S={id:"fs\u6A21\u5757",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#fs\u6A21\u5757","aria-hidden":"true"},"#",-1),N=s(" fs\u6A21\u5757 "),A=p(`<h4 id="\u76EE\u5F55\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55\u64CD\u4F5C" aria-hidden="true">#</a> \u76EE\u5F55\u64CD\u4F5C</h4><ol><li>\u521B\u5EFA\u76EE\u5F55 <code>fs.mkdir</code>,\u53EA\u80FD\u521B\u5EFA\u4E00\u7EA7\u76EE\u5F55,\u5982\u679C\u8BE5\u76EE\u5F55\u5DF2\u5B58\u5728\u5219\u65E0\u6CD5\u521B\u5EFA</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u56DE\u8C03\u51FD\u6570\u4E2D\u7684\u5F62\u53C2 err \u4F1A\u63A5\u6536\u9519\u8BEF\u6D88\u606F</span>
fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">&#39;./img&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">throw\u629B\u51FA\u5F02\u5E38</p></div><ol start="2"><li>\u8BFB\u53D6\u76EE\u5F55<code>fs.readdir</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span><span class="token string">&#39;./img&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// [ &#39;a.txt&#39;, &#39;b.txt&#39; ]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u5220\u9664\u76EE\u5F55<code>fs.rmdir</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token string">&#39;./img&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6587\u4EF6\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u64CD\u4F5C" aria-hidden="true">#</a> \u6587\u4EF6\u64CD\u4F5C</h4><ol><li>\u8BFB\u53D6\u6587\u4EF6<code>readFile</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BFB\u53D6\u65F6\u6307\u5B9A\u7F16\u7801\u683C\u5F0F</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./img/a.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// toString\u8F6C\u6362\u7F16\u7801</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./img/a.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    <span class="token comment">// console.log(data); // \u8F93\u51FA\u4E3A16\u8FDB\u5236</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u540C\u6B65\u64CD\u4F5C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;./img/b.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5199\u5165\u6587\u4EF6<code>weiteFile</code></li></ol><blockquote><p>\u9ED8\u8BA4\u5199\u5165\u6A21\u5F0F\u4F1A\u8986\u76D6\u4E4B\u524D\u7684\u5185\u5BB9</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;\u4F60\u597D&#39;</span>
<span class="token comment">// flag: w \u8986\u76D6  a \u5728\u672B\u5C3E\u8FFD\u52A0</span>
fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./img/b.txt&#39;</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">flag</span> <span class="token operator">:</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u5220\u9664\u6587\u4EF6<code>unlink</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string">&#39;./img/a.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),P={id:"http\u6A21\u5757",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#http\u6A21\u5757","aria-hidden":"true"},"#",-1),J=s(" http\u6A21\u5757 "),E=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u672C\u5730\u670D\u52A1\u5668</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u76D1\u542Crequest\u8BF7\u6C42</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// req\u8868\u793A\u8BF7\u5185\u5BB9  url  :\u8DEF\u5F84  </span>
                 <span class="token comment">// socket.remoteAddress \uFF1A\u8FDC\u7A0B IP \u5730\u5740\u7684\u5B57\u7B26\u4E32\u8868\u793A\u5F62\u5F0F</span>
                 <span class="token comment">// socket.remotePort    \uFF1A\u7AEF\u53E3\u53F7</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>socket<span class="token punctuation">.</span>remoteAddress<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// res\u8868\u793A\u54CD\u5E94\u5185\u5BB9 write:\u5411\u5BA2\u6237\u7AEF\u54CD\u5E94\u5185\u5BB9 end:\u7ED3\u675F\u54CD\u5E94\u5E76\u8FD4\u56DE setHearder:\u8BBE\u7F6E\u54CD\u5E94\u5934</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/plain; charset=utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u89E3\u51B3\u4E2D\u6587\u4E71\u7801\u95EE\u9898</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>   
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u542F\u52A8\u670D\u52A1\u5668\u7ED1\u5B9A\u7AEF\u53E3\u53F7</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u9001\u6587\u4EF6\u5230\u524D\u7AEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./user.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6A21\u5757" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6A21\u5757</h3><p>\u81EA\u5B9A\u4E49\u6A21\u5757\u5E76\u5BFC\u51FA</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sumAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        val <span class="token operator">+=</span> arguments<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> val<span class="token punctuation">;</span>
<span class="token punctuation">}</span> 

<span class="token comment">// \u5BFC\u51FA\u6A21\u5757</span>
exports<span class="token punctuation">.</span>sumAll <span class="token operator">=</span> sumAll<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">module.exports\u6A21\u5757\u5316\u5BFC\u51FA\u540E\u9762\u518D\u4E86\u89E3</p></div><p>\u4F7F\u7528\u81EA\u5B9A\u4E49\u6A21\u5757</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 *  ES6\u89E3\u6784\u8D4B\u503C\u8BED\u6CD5,\u53EF\u4EE5\u4E00\u6B21\u5BFC\u51FA\u591A\u4E2A,const <span class="token punctuation">{</span> sumAll, add <span class="token punctuation">}</span> = require(&#39;./sumFunction&#39;);
 *  const sumFunction = require(&#39;./sumFunction&#39;);
 *  let sum = sumFunction.sumAll(1, 3, 4, 6);
 */</span> 
<span class="token keyword">const</span> <span class="token punctuation">{</span> sumAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./sumFunction&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token function">sumAll</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u670D\u52A1\u5668\u70ED\u66F4\u65B0\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u5668\u70ED\u66F4\u65B0\u63D2\u4EF6" aria-hidden="true">#</a> \u670D\u52A1\u5668\u70ED\u66F4\u65B0\u63D2\u4EF6</h3><p>\u524D\u7AEF</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i -g nodemon
<span class="token comment"># \u4F7F\u7528nodemon\u542F\u52A8\u670D\u52A1\u5668</span>

nodemon server.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="js-ajax" tabindex="-1"><a class="header-anchor" href="#js-ajax" aria-hidden="true">#</a> JS-AJAX</h2><h4 id="\u8BF7\u6C42\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42\u65B9\u5F0F" aria-hidden="true">#</a> \u8BF7\u6C42\u65B9\u5F0F</h4><ol><li>GET: \u2003\u901A\u8FC7url\u67E5\u8BE2\u5B57\u7B26\u4E32\u8FDB\u884C\u4F20\u9012,\u4E0D\u592A\u5B89\u5168 <ul><li>\u5177\u6709\u7F13\u5B58\u6027</li><li>\u4F20\u8F93\u6548\u7387\u9AD8</li><li>\u53EF\u4EE5\u4F20\u9012\u7684\u6570\u636E\u91CF\u5C0F,\u53D7url\u957F\u5EA6\u9650\u5236</li></ul></li><li>POST: \u2003\u4F20\u53C2\u65B9\u5F0F\u662F\u5728send\u8BF7\u6C42\u4F53\u4E2D\u4F20\u9012,\u8F83\u5B89\u5168 <ul><li>\u6CA1\u6709\u7F13\u5B58\u6027</li><li>\u4F20\u8F93\u6548\u7387\u6CA1GET\u9AD8</li><li>POST\u6CA1\u6709\u6570\u636E\u91CF\u9650\u5236</li></ul></li></ol><h3 id="\u524D\u7AEF-get" tabindex="-1"><a class="header-anchor" href="#\u524D\u7AEF-get" aria-hidden="true">#</a> \u524D\u7AEF(GET)</h3><ol><li><strong>open\u89C4\u5B9A\u8BF7\u6C42\u7684\u7C7B\u578B,URL\u4EE5\u53CA\u662F\u5426\u5F02\u6B65\u5904\u7406\u8BF7\u6C42</strong></li></ol><ul><li>\u8BED\u6CD5:<code>open(method,url,async)</code><ul><li>method:\u2003\u8BF7\u6C42\u7C7B\u578BGET\u6216POST</li><li>url:\u2003\u6587\u4EF6\u5728\u670D\u52A1\u5668\u4E0A\u7684\u4F4D\u7F6E</li><li>async:\u2003true(\u5F02\u6B65),false(\u540C\u6B65)</li></ul></li></ul><ol start="2"><li><strong>send\u5C06\u8BF7\u6C42\u53D1\u9001\u5230\u670D\u52A1\u5668</strong></li></ol><p>send(string) :\u2003<code>string</code>\u4EC5\u7528\u4E8EPOST\u8BF7\u6C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u521B\u5EFAxml\u5BF9\u8C61\u5B9E\u4F8B</span>
<span class="token keyword">let</span> xml <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. \u6253\u5F00\u4E0E\u540E\u53F0\u7684\u901A\u9053</span>
xml<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;http://localhost:5000/add?userName=&#39;</span> 
                <span class="token operator">+</span> ipts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">&#39;&amp;password=&#39;</span> <span class="token operator">+</span> ipts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3. \u53D1\u9001\u8BF7\u6C42\u94FE\u63A5</span>
xml<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 4. \u76D1\u542C\u670D\u52A1\u5668\u54CD\u5E94\u72B6\u6001</span>
xml<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>xml<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xml<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u670D\u52A1\u5668\u54CD\u5E94\u8FD4\u56DE\u6570\u636E xml.response</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xml<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>onreadystatechange\u4E8B\u4EF6</strong>\u6BCF\u5F53 <code>readyState</code> \u5C5E\u6027\u6539\u53D8\u65F6,\u5C31\u4F1A\u8C03\u7528\u8BE5\u51FD\u6570</li></ol><ul><li>status: \u2003 http\u72B6\u6001\u7801 <ul><li>1xx: \u2003http\u8BF7\u6C42\u4E2D</li><li>2xx: \u2003\u54CD\u5E94\u5B8C\u6210\u5E76\u6210\u529F\u8FD4\u56DE \u2003200</li><li>3xx: \u2003\u54CD\u5E94\u5B8C\u6210,\u8D44\u6E90\u91CD\u5B9A\u5411\u2003301,302</li><li>4xx: \u2003\u54CD\u5E94\u53D1\u751F\u5BA2\u6237\u7AEF\u9519\u8BEF\u2003404</li><li>5xx: \u2003\u54CD\u5E94\u53D1\u751F\u670D\u52A1\u7AEF\u9519\u8BEF (\u6709\u53EF\u80FD\u4F20\u53C2\u9519\u8BEF)</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u76D1\u542C\u670D\u52A1\u5668\u54CD\u5E94\u72B6\u6001</span>
xml<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>xml<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>xml<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xml<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xml<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u670D\u52A1\u5668\u54CD\u5E94\u56DE\u6765\u7684\u6570\u636E</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>readyState: \u2003\u5B58\u6709 XMLHttpRequest \u7684\u72B6\u6001,\u4ECE 0 \u5230 4 \u53D1\u751F\u53D8\u5316. <ul><li>0: \u8BF7\u6C42\u672A\u521D\u59CB\u5316</li><li>1: \u670D\u52A1\u5668\u8FDE\u63A5\u5DF2\u5EFA\u7ACB</li><li>2: \u8BF7\u6C42\u5DF2\u63A5\u6536</li><li>3: \u8BF7\u6C42\u5904\u7406\u4E2D</li><li>4: \u8BF7\u6C42\u5DF2\u5B8C\u6210,\u4E14\u54CD\u5E94\u5DF2\u5C31\u7EEA</li></ul></li></ul><h3 id="\u540E\u7AEF\u914D\u7F6E-get" tabindex="-1"><a class="header-anchor" href="#\u540E\u7AEF\u914D\u7F6E-get" aria-hidden="true">#</a> \u540E\u7AEF\u914D\u7F6E(GET)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFAhttp\u670D\u52A1</span>
<span class="token keyword">let</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728\u8FD9\u91CC\u6253\u5F00\u9875\u9762\u662F\u4E3A\u4E86\u89E3\u51B3\u8DE8\u57DF\u95EE\u9898</span>
        fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./02-\u539F\u751Fjs\u524D\u540E\u7AEF\u4EA4\u4E92.html&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u63A5\u6536\u5230\u643A\u5E26\u4FE1\u606F\u7684URL\u540E\u4F7F\u7528\u5B57\u7B26\u4E32\u65B9\u6CD5\u8FDB\u884C\u5904\u7406</span>
        <span class="token keyword">let</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
        <span class="token keyword">let</span> index <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> u <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5224\u65AD\u8DEF\u5F84\u662F\u5426\u6B63\u786E</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>u <span class="token operator">===</span> <span class="token string">&#39;/add&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u8FD4\u56DE\u6570\u636E,\u4F46\u662F\u4E0D\u80FD\u76F4\u63A5\u8FD4\u56DE\u5BF9\u8C61,\u6240\u4EE5\u5B9A\u4E49\u5B8C\u5BF9\u8C61\u4F7F\u7528JSON\u5BF9\u8C61\u4F20\u8F93</span>
            <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">code</span> <span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
                <span class="token literal-property property">msg</span> <span class="token operator">:</span> <span class="token string">&#39;submit successful&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">token</span> <span class="token operator">:</span> <span class="token string">&#39;eqe314142342&#39;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// res.end(JSON.stringify(obj))</span>
            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u76D1\u542C</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;form server running......&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u524D\u7AEF-post" tabindex="-1"><a class="header-anchor" href="#\u524D\u7AEF-post" aria-hidden="true">#</a> \u524D\u7AEF(POST)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> add<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  POST\uFF1A\u6570\u636E\u683C\u5F0F1</span>
    <span class="token keyword">let</span> userObj <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">userName</span> <span class="token operator">:</span> ipts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        <span class="token literal-property property">password</span> <span class="token operator">:</span> ipts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// POST\uFF1A\u6570\u636E\u683C\u5F0F2</span>
    <span class="token keyword">let</span> userStr <span class="token operator">=</span> <span class="token string">&#39;userName=yian&amp;password=1234&#39;</span>

    <span class="token keyword">let</span> xml <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xml<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;http://127.0.0.1:5000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xml<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>userObj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// xml.send(userStr);</span>
    xml<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u540E\u7AEF-post" tabindex="-1"><a class="header-anchor" href="#\u540E\u7AEF-post" aria-hidden="true">#</a> \u540E\u7AEF(POST)</h3><ul><li>request\u4E8B\u4EF6:\u2003\u6BCF\u6B21\u6709\u8BF7\u6C42\u65F6\u89E6\u53D1</li><li>data\u4E8B\u4EF6: \u2003\u63A5\u6536\u5230\u6570\u636E\u65F6\u89E6\u53D1.\u5982\u679CSocket\u89E6\u53D1&#39;data&#39;\u4E8B\u4EF6\u65F6\u6CA1\u6709\u76D1\u542C\u5668,\u5219\u6570\u636E\u5C06\u4E22\u5931</li><li>end\u4E8B\u4EF6:\u2003\u5F53\u5957\u63A5\u5B57\u7684\u53E6\u4E00\u7AEF\u8868\u793A\u4F20\u8F93\u7ED3\u675F\u65F6\u89E6\u53D1,\u4ECE\u800C\u7ED3\u675F\u5957\u63A5\u5B57\u7684\u53EF\u8BFB\u7AEF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8DEF\u5F84\u6A21\u5757</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u89E3\u6790\u67E5\u8BE2\u5B57\u7B26\u4E32\u6A21\u5757</span>
<span class="token keyword">const</span> queryString <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;querystring&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token keyword">let</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u89E3\u51B3\u8DE8\u57DF\u95EE\u9898</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7528\u4E8E\u63A5\u6536\u5BA2\u6237\u7AEF\u53D1\u9001\u8FC7\u6765\u7684\u6570\u636E</span>
        <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> 

        <span class="token comment">// \u6BCF\u5F53\u670D\u52A1\u7AEF\u6536\u5230\u4E00\u6B21\u8BF7\u6C42\u5185\u5BB9\u5C31\u4F1A\u89E6\u53D1, \u5F62\u53C2ch\u4E3A\u63A5\u6536\u5185\u5BB9</span>
        req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ch</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            msg <span class="token operator">+=</span> ch<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token comment">// \u6240\u6709\u6570\u636E\u63A5\u6536\u5B8C\u89E6\u53D1</span>
        req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6570\u636E\u683C\u5F0F1\u7528\u4EE5\u4E0B\u89E3\u7801\u65B9\u5F0F</span>
            msg <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// {&quot;userName&quot;:&quot;\u6613\u5B89&quot;,&quot;password&quot;:&quot;1234&quot;}</span>

            <span class="token comment">// \u6570\u636E\u683C\u5F0F2\u7528\u4EE5\u4E0B\u89E3\u7801\u65B9\u5F0F</span>
            <span class="token comment">// let s = queryString.parse(msg);</span>
            <span class="token comment">// console.log(s)</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;running......&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">queryString\u5DF2\u5F03\u7528</p></div><h3 id="\u8DE8\u57DF\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u8DE8\u57DF\u95EE\u9898" aria-hidden="true">#</a> \u8DE8\u57DF\u95EE\u9898</h3><div class="custom-container tip"><p class="custom-container-title">\u540C\u6E90\u7B56\u7565(Same-origin policy)</p><p>\u534F\u8BAE\u3001\u57DF\u540D(IP)\u3001\u7AEF\u53E3\u76F8\u540C\u5373\u4E3A\u540C\u6E90.\u6D4F\u89C8\u5668\u7684\u540C\u6E90\u7B56\u7565\u662F\u4E00\u79CD\u7EA6\u5B9A,\u662F\u6D4F\u89C8\u5668\u6700\u6838\u5FC3\u4E5F\u662F\u6700\u57FA\u672C\u7684\u5B89\u5168\u529F\u80FD.\u5982\u679C\u7F3A\u5C11\u4E86\u540C\u6E90\u7B56\u7565,\u6D4F\u89C8\u5668\u5F88\u5BB9\u6613\u53D7\u5230XSS\u3001CSFR \u7B49\u653B\u51FB.</p></div><p>\u7531\u4E8E\u540C\u6E90\u7B56\u7565\u53EA\u5141\u8BB8\u540C\u534F\u8BAE,\u540C\u57DF\u540D,\u540C\u7AEF\u53E3\u53F7\u7684\u7F51\u5740\u53EF\u4EE5\u76F8\u4E92\u8BBF\u95EE,\u4E09\u8005\u6709\u4E00\u4E2A\u4E0D\u540C\u5373\u4E3A\u8DE8\u57DF,\u89E3\u51B3\u8DE8\u57DF\u95EE\u9898\u7684\u65B9\u5F0F:(\u4E00\u822C\u7528\u524D\u4E09\u4E2A)</p><ul><li>CORS\u89E3\u51B3\u8DE8\u57DF(\u540E\u7AEF\u89E3\u51B3)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u89E3\u51B3\u8DE8\u57DF\u95EE\u9898   \u5141\u8BB8\u8BBF\u95EE\u63A7\u5236</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span>
    <span class="token doc-comment comment">/** \u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A\u767D\u540D\u5355:
     *res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;http://127.0.0.1:8848&#39;)
    **/</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4EE3\u7406\u89E3\u51B3 proxy(H5)</li><li>\u4EE3\u7406\u89E3\u51B3 nginx\u53CD\u5411\u4EE3\u7406</li><li>JSONP\u65B9\u5F0F\u89E3\u51B3\u8DE8\u57DF</li><li>iframe\u6846\u67B6</li><li>\u5728\u6D4F\u89C8\u5668\u5F3A\u5236\u8BBE\u7F6E\u8BF7\u6C42\u5934\u66F4\u6539</li></ul><h2 id="jq-ajax" tabindex="-1"><a class="header-anchor" href="#jq-ajax" aria-hidden="true">#</a> jQ-AJAX</h2><ul><li><code>$.get()</code></li><li><code>$.post</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">userName</span> <span class="token operator">:</span> <span class="token string">&#39;\u5B89&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">passWord</span> <span class="token operator">:</span> <span class="token string">&#39;1232332&#39;</span>
<span class="token punctuation">}</span>

$<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/register&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>$.ajax()</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/register&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u540C\u6B65\u5F02\u6B65 true:\u5F02\u6B65 false:\u540C\u6B65</span>
    <span class="token literal-property property">async</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// beforeSend: function (xml) { },</span>
    <span class="token comment">// \u65E0\u8BBA\u6210\u529F\u5931\u8D25\u90FD\u4F1A\u8C03\u7528\u7684\u51FD\u6570</span>
    <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">xml</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        xml<span class="token punctuation">.</span>response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8BF7\u6C42\u53D1\u9001\u7684\u6570\u636E</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">userName</span><span class="token operator">:</span> <span class="token string">&#39;yi\u5B89&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">passWord</span><span class="token operator">:</span> <span class="token string">&#39;1232332&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u6570\u636E\u7C7B\u578B</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;String&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8BF7\u6C42\u5931\u8D25\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u6210\u529F\u65F6\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8D85\u65F6\u65F6\u95F4</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8BF7\u6C42\u7C7B\u578B</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// url\u4E5F\u53EF\u4EE5\u5199\u5728\u8FD9,\u4F46\u4E00\u822C\u4E0D\u4F1A</span>
    <span class="token comment">// url: &#39;http://127.0.0.1:5000/register&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="express\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#express\u6846\u67B6" aria-hidden="true">#</a> Express\u6846\u67B6</h2>`,45),F={href:"https://www.expressjs.com.cn/",target:"_blank",rel:"noopener noreferrer"},R=s("Express\u4E2D\u6587\u7F51"),C=s(".\u57FA\u4E8ENode.js\u5E73\u53F0,\u5FEB\u901F\u3001\u5F00\u653E\u3001\u6781\u7B80\u7684 Web \u5F00\u53D1\u6846\u67B6"),H=p(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i express --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528express" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528express" aria-hidden="true">#</a> \u4F7F\u7528Express</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5BFC\u5165\u6A21\u5757 -\uFF08\u4F18\u5148\u5BFC\u5165\u672C\u5730\uFF09</span>
<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// npm i body-parser --save    \u5BFC\u5165\u4E2D\u95F4\u4EF6</span>
<span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;body-parser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u670D\u52A1\u5668</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B9A\u4E49\u7AEF\u53E3</span>
<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>

<span class="token comment">// \u8DE8\u57DF</span>
app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528\u4E2D\u95F4\u4EF6</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u914D\u7F6E\u670D\u52A1\u5668\u8DEF\u7531</span>
    <span class="token comment">// get\u8BF7\u6C42 -- http://localhost:5000/user?userName=\u6613\u5B89&amp;passworld=12345</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world, \u4F60\u597D&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// { userName: &#39;\u6613\u5B89&#39;, passworld: &#39;12345&#39; }</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(req.query);   \u8FD9\u4E2A\u63A5\u6536\u65B9\u5F0F\u53EA\u9002\u7528\u4E8Eget</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// body\u5728express\u4E2D\u5185\u7F6E\u4E0D\u5B58\u5728,\u9700\u8981\u6DFB\u52A0\u4E2D\u95F4\u4EF6</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u542F\u52A8\u670D\u52A1\u5668</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">app listening on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528body\u4E2D\u95F4\u4EF6,\u524D\u7AEF\u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE\u5BF9\u8C61\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5411\u670D\u52A1\u5668\u53D1\u9001\u7684\u6570\u636E</span>
<span class="token keyword">let</span> userObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">userName</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#inputUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">passWord</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#inputPassword&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528jQ-AJAX\u901A\u8FC7post\u65B9\u5F0F\u8BF7\u6C42</span>
$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:5000/register&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BF7\u6C42\u53D1\u9001\u7684\u6570\u636E</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> userObj<span class="token punctuation">,</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u6210\u529F\u65F6\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token comment">// {code: 1, msg: &#39;success&#39;}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8D85\u65F6\u65F6\u95F4</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8BF7\u6C42\u7C7B\u578B</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8DEF\u7531\u5206\u79BB" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u7531\u5206\u79BB" aria-hidden="true">#</a> \u8DEF\u7531\u5206\u79BB</h3><p>\u5C06\u670D\u52A1\u5668\u90E8\u5206\u4E0E\u8DEF\u7531\u90E8\u5206\u5206\u5F00\u5199,\u6CE8\u91CA\u6389\u7684\u662F\u6A21\u5757\u5316\u5199\u6CD5</p><ul><li>\u670D\u52A1\u5668\u4E3B\u6587\u4EF6<code>app.js</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;body-parser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// const { router } = require(&#39;./router.js&#39;)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./router.js&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// router(app);</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;running&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8DEF\u7531\u4E3B\u6587\u4EF6<code>router.js</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// function router (app) {</span>
<span class="token comment">//     app.get();</span>
<span class="token comment">//     app.post();</span>
<span class="token comment">// }</span>
<span class="token comment">// exports.router = router;</span>

<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// router.get();</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setRegister</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>post\u4E2D\u903B\u8F91\u6587\u4EF6<code>setRegister.js</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">setRegister</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> userObj <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
    <span class="token comment">// \u8BFB\u7528\u6237\u6CE8\u518C\u6587\u4EF6,\u5224\u65AD\u7528\u6237\u662F\u5426\u5DF2\u7ECF\u6CE8\u518C</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./user.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>userName <span class="token operator">===</span> userObj<span class="token punctuation">.</span>userName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;\u8BE5\u7528\u6237\u5DF2\u5B58\u5728&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u6CE8\u518C\u7528\u6237</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>userObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./user.json&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
                res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;\u6CE8\u518C\u6210\u529F&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
exports<span class="token punctuation">.</span>setRegister <span class="token operator">=</span> setRegister<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="express\u5F00\u653E\u6587\u4EF6\u5939" tabindex="-1"><a class="header-anchor" href="#express\u5F00\u653E\u6587\u4EF6\u5939" aria-hidden="true">#</a> Express\u5F00\u653E\u6587\u4EF6\u5939</h3><p>\u9879\u76EE\u7ED3\u6784\u5982\u4E0B:</p><ul><li>docs <ul><li>js <ul><li>jquery-3.6.0.min.js</li></ul></li><li>server <ul><li>......</li></ul></li><li>web <ul><li>index.html</li></ul></li></ul></li></ul><p>\u73B0\u5728\u9700\u8981\u5F00\u653Ejs\u6587\u4EF6\u5939,\u4F9Bindex.html\u5728\u672C\u5730\u670D\u52A1\u5668\u8BBF\u95EE,\u5219\u9700\u8981\u5728\u670D\u52A1\u7AEF\u8FDB\u884C\u4EE5\u4E0B\u914D\u7F6E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/js/&#39;</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;../js/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// index.html\u8BBF\u95EE</span>
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;http://127.0.0.1:5000/js/jquery-3.6.0.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;../js/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// index.html\u8BBF\u95EE </span>
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;http://127.0.0.1:5000/jquery-3.6.0.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2B50<strong>\u4E0D\u60F3\u8BA9\u4EBA\u77E5\u9053\u8FD9\u4E2Ajs\u6587\u4EF6\u771F\u6B63\u7684\u76EE\u5F55,\u53EF\u4EE5\u4F20\u4F2A\u8DEF\u5F84</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/yian/&#39;</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;../js/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// index.html\u8BBF\u95EE</span>
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;http://127.0.0.1:5000/yian/jquery-3.6.0.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function L($,G){const t=o("ExternalLinkIcon"),e=o("Badge");return i(),l("div",null,[r,n("div",k,[d,v,m,b,n("p",null,[n("a",g,[f,a(t)]),h,n("a",y,[x,a(t)]),w,n("a",j,[q,a(t)])])]),_,n("h3",S,[O,N,a(e,{type:"tip",text:"file-system",vertical:"top"})]),A,n("h3",P,[T,J,a(e,{type:"tip",text:"\u521B\u5EFAweb\u670D\u52A1\u5668",vertical:"top"})]),E,n("p",null,[n("a",F,[R,a(t)]),C]),H])}var X=c(u,[["render",L],["__file","node.html.vue"]]);export{X as default};
